// <auto-generated />
using System;
using Agreement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agreement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250414193811_InitialCr")]
    partial class InitialCr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agreement.Models.AgreementRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("active")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bhff")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("bohfexpire")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("bohffile")
                        .HasColumnType("text");

                    b.Property<string>("bohffileStoredname")
                        .HasColumnType("text");

                    b.Property<string>("datecaputred")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("draddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("drcell")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dremail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dridnr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("drname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("drphysicaddrs")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("drsurname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("emerfile")
                        .HasColumnType("text");

                    b.Property<string>("emerfileStoredName")
                        .HasColumnType("text");

                    b.Property<string>("formid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("formname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("hosigned")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("hpcsaexpire")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("hpcsafile")
                        .HasColumnType("text");

                    b.Property<string>("hpcsafileStoredName")
                        .HasColumnType("text");

                    b.Property<string>("idfile")
                        .HasColumnType("text");

                    b.Property<string>("idfileStoredName")
                        .HasColumnType("text");

                    b.Property<string>("physemail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ppiiexpire")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ppiifile")
                        .HasColumnType("text");

                    b.Property<string>("ppiifileStoredName")
                        .HasColumnType("text");

                    b.Property<string>("qsfile")
                        .HasColumnType("text");

                    b.Property<string>("qsfileStoredName")
                        .HasColumnType("text");

                    b.Property<string>("timecaptured")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Agreements");
                });
#pragma warning restore 612, 618
        }
    }
}
